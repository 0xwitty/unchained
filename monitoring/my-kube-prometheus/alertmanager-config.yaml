route:
  group_by: ['alertname', 'severity']

  group_wait: 30s
  group_interval: 5m
  repeat_interval: 5m
  receiver: blackhole

  # The child route trees.
  routes:
    # This routes performs a regular expression match on alert labels to
    # catch alerts that are related to a list of services.
    - matchers:
        - alertname=~"KubePersistentVolumeFillingUp|KubeJobFailed"
      receiver: discord


# TODO add send_resolved

inhibit_rules:
# - source_match:
#     severity: 'warning'
#   target_match:
#     severity: 'critical'
#   equal: ['alertname', 'instance', 'job']

# - source_match:
#     severity: 'warning'
#   target_match:
#     severity: 'warning'
#   equal: ['alertname', 'instance', 'job']

- source_match:
    severity: 'critical'
  target_match_re:
    severity: '(warning|critical)'
  equal: ['alertname', 'instance', 'job']
  

# ^^ How this thing works - ChatGPT, may you live long and prosper: 
# In the above configuration, we have defined three inhibit_rules that prevent alerts with certain severities from firing when a matching alert with a different severity is already active. Here's what each rule does:
# The first inhibit_rules rule prevents a warning severity alert from firing if there is already a matching critical severity alert active for the same alertname, instance, and job.
# The second rule prevents a warning severity alert from firing if there is already a matching warning severity alert active for the same alertname, instance, and job.
# The third rule prevents a critical severity alert from firing if there is already a matching warning or critical severity alert active for the same alertname, instance, and job.



receivers:
- name: discord
  discord_configs:
  - webhook_url: https://discord.com/api/webhooks/1107675995386949652/l-Vy65m12PshmvobRdGcZiyfaDGUuWhjRWsNnFKvmCU1YLg3Q3OfA5qEcyjEafbFee1o
    message: '{{ template "our.discord.message" . }}'
    title: '{{ template "our.discord.title" . }}'
    # title: "Running out of disk space: {{ range .Alerts }}{{ .Annotations.summary }}\n{{ end }}"
    # message: "{{ range .Alerts }}{{ .Annotations.description }}\n{{ end }}"

- name: blackhole
  

templates:
- '/etc/alertmanager/configmaps/default.tmpl/data'